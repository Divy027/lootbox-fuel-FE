/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.90.0
  Forc version: 0.60.0
  Fuel-Core version: 0.30.0
*/

import type {
  BigNumberish,
  BN,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
} from 'fuels';

import type { Enum } from "./common";

export enum ErrorInput { InvalidAssetID = 'InvalidAssetID', InvalidAmount = 'InvalidAmount', LootboxNotFound = 'LootboxNotFound', RequestRandomNumberFailed = 'RequestRandomNumberFailed', RewardGenerationFailed = 'RewardGenerationFailed', AssetNotInLootbox = 'AssetNotInLootbox', InvalidConversion = 'InvalidConversion', NoPendingReward = 'NoPendingReward', LootboxOpenFailed = 'LootboxOpenFailed' };
export enum ErrorOutput { InvalidAssetID = 'InvalidAssetID', InvalidAmount = 'InvalidAmount', LootboxNotFound = 'LootboxNotFound', RequestRandomNumberFailed = 'RequestRandomNumberFailed', RewardGenerationFailed = 'RewardGenerationFailed', AssetNotInLootbox = 'AssetNotInLootbox', InvalidConversion = 'InvalidConversion', NoPendingReward = 'NoPendingReward', LootboxOpenFailed = 'LootboxOpenFailed' };
export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;
export type LootboxInput = { id: BigNumberish, asset: AssetIdInput, amount: BigNumberish, reward_range: [BigNumberish, BigNumberish], seed: string };
export type LootboxOutput = { id: BN, asset: AssetIdOutput, amount: BN, reward_range: [BN, BN], seed: string };

interface LootboxAbiInterface extends Interface {
  functions: {
    Initialize: FunctionFragment;
    add_asset_to_lootbox: FunctionFragment;
    claim_reward: FunctionFragment;
    get_lootbox: FunctionFragment;
    open_lootbox: FunctionFragment;
    rng_cost: FunctionFragment;
  };
}

export class LootboxAbi extends Contract {
  interface: LootboxAbiInterface;
  functions: {
    Initialize: InvokeFunction<[reward_range: [BigNumberish, BigNumberish], expected_asset_id: AssetIdInput, expected_amount: BigNumberish], void>;
    add_asset_to_lootbox: InvokeFunction<[expected_asset_id: AssetIdInput, expected_amount: BigNumberish], void>;
    claim_reward: InvokeFunction<[], void>;
    get_lootbox: InvokeFunction<[sender: IdentityInput], LootboxOutput>;
    open_lootbox: InvokeFunction<[seed: string], void>;
    rng_cost: InvokeFunction<[], BN>;
  };
}
