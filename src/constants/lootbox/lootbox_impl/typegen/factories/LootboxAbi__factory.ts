/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.90.0
  Forc version: 0.60.0
  Fuel-Core version: 0.30.0
*/

import { Interface, Contract, ContractFactory } from "fuels";
import type { Provider, Account, AbstractAddress, BytesLike, DeployContractOptions, StorageSlot } from "fuels";
import type { LootboxAbi, LootboxAbiInterface } from "../LootboxAbi";

const _abi = {
  "encoding": "1",
  "types": [
    {
      "typeId": 0,
      "type": "()",
      "components": [],
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "(_, _)",
      "components": [
        {
          "name": "__tuple_element",
          "type": 9,
          "typeArguments": null
        },
        {
          "name": "__tuple_element",
          "type": 9,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 2,
      "type": "b256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 3,
      "type": "enum Error",
      "components": [
        {
          "name": "InvalidAssetID",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "InvalidAmount",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "LootboxNotFound",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "RequestRandomNumberFailed",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "RewardGenerationFailed",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "AssetNotInLootbox",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "InvalidConversion",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "NoPendingReward",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "LootboxOpenFailed",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 4,
      "type": "enum Identity",
      "components": [
        {
          "name": "Address",
          "type": 5,
          "typeArguments": null
        },
        {
          "name": "ContractId",
          "type": 7,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 5,
      "type": "struct Address",
      "components": [
        {
          "name": "bits",
          "type": 2,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 6,
      "type": "struct AssetId",
      "components": [
        {
          "name": "bits",
          "type": 2,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 7,
      "type": "struct ContractId",
      "components": [
        {
          "name": "bits",
          "type": 2,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 8,
      "type": "struct Lootbox",
      "components": [
        {
          "name": "id",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "asset",
          "type": 6,
          "typeArguments": null
        },
        {
          "name": "amount",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "reward_range",
          "type": 1,
          "typeArguments": null
        },
        {
          "name": "seed",
          "type": 2,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 9,
      "type": "u256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 10,
      "type": "u64",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "reward_range",
          "type": 1,
          "typeArguments": null
        },
        {
          "name": "expected_asset_id",
          "type": 6,
          "typeArguments": null
        },
        {
          "name": "expected_amount",
          "type": 10,
          "typeArguments": null
        }
      ],
      "name": "Initialize",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "expected_asset_id",
          "type": 6,
          "typeArguments": null
        },
        {
          "name": "expected_amount",
          "type": 10,
          "typeArguments": null
        }
      ],
      "name": "add_asset_to_lootbox",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "claim_reward",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "sender",
          "type": 4,
          "typeArguments": null
        }
      ],
      "name": "get_lootbox",
      "output": {
        "name": "",
        "type": 8,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "seed",
          "type": 2,
          "typeArguments": null
        }
      ],
      "name": "open_lootbox",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "rng_cost",
      "output": {
        "name": "",
        "type": 10,
        "typeArguments": null
      },
      "attributes": null
    }
  ],
  "loggedTypes": [
    {
      "logId": "5679770223941778533",
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    }
  ],
  "messagesTypes": [],
  "configurables": []
};

const _storageSlots: StorageSlot[] = [
  {
    "key": "4a85c26b85cd1ac73285aef6fa28d8adaa161639395a533f576358914e503aa0",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  }
];

export const LootboxAbi__factory = {
  abi: _abi,

  storageSlots: _storageSlots,

  createInterface(): LootboxAbiInterface {
    return new Interface(_abi) as unknown as LootboxAbiInterface
  },

  connect(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider
  ): LootboxAbi {
    return new Contract(id, _abi, accountOrProvider) as unknown as LootboxAbi
  },

  async deployContract(
    bytecode: BytesLike,
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<LootboxAbi> {
    const factory = new ContractFactory(bytecode, _abi, wallet);

    const contract = await factory.deployContract({
      storageSlots: _storageSlots,
      ...options,
    });

    return contract as unknown as LootboxAbi;
  }
}
